--- a/polygonio/cache_io.py
+++ b/polygonio/cache_io.py
@@ -4,7 +4,7 @@
 from pathlib import Path
 from typing import Any, Dict
 
-from .paths import get_price_cache_file, get_chain_cache_file, ensure_dir, DATA_ROOT, POLYGON_OPTION_CACHE_DIRNAME
+from .paths import get_price_cache_file, get_chain_cache_file, ensure_dir, ROOT_DIR, POLY_OPTION_DIR
 
 # ---------------------------------------------------------
 # In-memory singletons (shared process-wide)
@@ -95,7 +95,7 @@
     chain_cache_file: Path = get_chain_cache_file(t)
 
     # Ensure parent dir exists
-    ensure_dir(DATA_ROOT / POLYGON_OPTION_CACHE_DIRNAME)
+    ensure_dir(ROOT_DIR / POLY_OPTION_DIR)
 
     # Load existing pickles (under lock) to avoid overwriting concurrent updates
     existing_price: Dict[str, Any] = {}
--- a/polygonio/backtest_core.py
+++ b/polygonio/backtest_core.py
@@ -58,15 +58,7 @@
 # Calendar helpers
 # ----------------------------
 
-def trading_dates_df(start_date: str, end_date: str):
-    """Return a DataFrame with a single 'date' column of trading datetimes.
-
-    Uses NYSE by default via `TradingCalendar` and mirrors the legacy
-    behavior of adjusting to last trading day <= candidate weekday.
-    """
-    cal = TradingCalendar("NYSE")
-    return cal.trading_dates_df(start_date, end_date)
-
+from .market_calendar import trading_dates_df
 
 def list_expiries(weekday: str, start_date: str, end_date: str, expiring_wk: int, trading_df) -> List:
     """Wrapper that delegates to the calendar module's logic.
